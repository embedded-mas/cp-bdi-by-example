/*
   Project architecture_1

   Gradle build file for JaCaMo Applications
   outubro 13, 2020 - 09:36:07
*/

defaultTasks 'run'

apply plugin: 'java'
apply plugin: 'eclipse'

version '1.0'
group   'org.jacamo'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "https://raw.github.com/jacamo-lang/mvn-repo/master" }
    maven { url "https://repo.gradle.org/gradle/libs-releases-local" }
    maven { url "https://raw.github.com/embedded-mas/embedded-mas-mvn-repo/master" }


    flatDir {
       dirs 'lib'
    }

    mavenCentral()
}

dependencies {
    implementation 'org.jacamo:jacamo:0.10-SNAPSHOT'
    implementation "embedded-mas:embedded-mas:0.061-SNAPSHOT" 
    
}

sourceSets {
    main {
        java {
            srcDir 'src/env'
            srcDir 'src/agt'
            srcDir 'src/org'
            srcDir 'src/java'
        }
        resources {
            srcDir 'src/resources'
            srcDir 'src/agt'
        }
    }
}

// task run (type: JavaExec, dependsOn: 'classes') {
//     group       ' JaCaMo'
//     description 'runs the JaCaMo application'
//     doFirst {
//         mkdir 'log'
//     }
//     main 'jacamo.infra.JaCaMoLauncher'
//     args 'perception_action.jcm'
//     classpath sourceSets.main.runtimeClasspath
// }



task run (type: JavaExec, dependsOn: ['compileGeneratedInternalActions','classes']) {
    group       ' JaCaMo'
    description 'runs the JaCaMo application'
    mainClass = 'jacamo.infra.JaCaMoLauncher'
    args 'perception_action.jcm'
    // jvmArgs '-Xss15m'
    classpath sourceSets.main.runtimeClasspath
}


// Generate internal actions corresponding to actions specified in the yaml files
task generateInternalActions(type: JavaExec) {
    group = 'Application'
    description = 'Generate internal actions corresponding to actions specidied in the yaml files'
    classpath = sourceSets.main.runtimeClasspath
    main = 'embedded.mas.bridges.jacamo.InternalActionGenerator'
    outputs.dir 'src/java/jason/stdlib'
}


// Compile internal actions
task compileGeneratedInternalActions(type: JavaCompile, dependsOn: ['generateInternalActions']) {
    // Specifies the source files to compile after the generation task has run
    source = fileTree("src/java/jason/stdlib/") {
        include '**/*.java' // Include Java files from the generated sources
    }
    classpath = sourceSets.main.compileClasspath    
    destinationDir = destinationDir = file("$buildDir/classes/java/main") // Target directory for compilation
}


task buildJCMDeps (type: JavaExec, dependsOn: 'classes') {
    mainClass = 'jacamo.infra.RunJaCaMoProject'
    args = ['app1.jcm', '--deps']
    classpath sourceSets.main.runtimeClasspath
}

clean {
    delete 'bin'
    delete 'build'
    delete 'log'
}
